# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := "/home/pi/rti_connext_dds-6.0.1"
endif

SOURCE_DIR =
IMU_DIR =./imu/
HEIGHT_DIR =./heightSensor/
PID_DIR =./pid/

TARGET_ARCH = armv6vfphLinux3.xgcc4.7.2
TARGET_IMU = imu
TARGET_HEIGHT = height
TARGET_PID = pid

ifndef COMPILER
COMPILER = arm-linux-gnueabihf-gcc
endif
COMPILER_FLAGS =
ifndef LINKER
LINKER = arm-linux-gnueabihf-gcc
endif
LINKER_FLAGS =
SYSLIBS = -ldl -lnsl -lm -lpthread -lrt
DEFINES = -fpic -DRTI_UNIX -DRTI_LINUX -march=armv6 -mfpu=vfp -mfloat-abi=hard -mlong-calls 
ifndef DEBUG
DEBUG=0 
endif
ifeq ($(DEBUG),1)
COMPILER_FLAGS += -g -O0
LINKER_FLAGS += -g
DEBUG_SFX = d
else
DEBUG_SFX = 
endif
 
ifndef SHAREDLIB
SHAREDLIB=0
endif

ifeq ($(SHAREDLIB),1)
SHAREDLIB_SFX = 
else
SHAREDLIB_SFX = z
DEFINES += -DRTI_STATIC
endif



INCLUDES = -I. -I$(NDDSHOME)/include -I$(NDDSHOME)/include/ndds 
       
LIBS = -L$(NDDSHOME)/lib/$(TARGET_ARCH) \
        \
        \
        -lnddsc$(SHAREDLIB_SFX)$(DEBUG_SFX) -lnddscore$(SHAREDLIB_SFX)$(DEBUG_SFX) \
        $(SYSLIBS)

CDRSOURCES_IMU = imu.idl
CDRSOURCES_HEIGHT = heightSensor.idl
CDRSOURCES_PID = pid.idl

SOURCES_IMU = $(IMU_DIR)imuPlugin.c $(IMU_DIR)imu.c $(IMU_DIR)imuSupport.c $(SOURCE_DIR)PID_roll.c $(SOURCE_DIR)PID_pitch.c
SOURCES_HEIGHT = $(HEIGHT_DIR)heightSensorPlugin.c $(HEIGHT_DIR)heightSensor.c $(HEIGHT_DIR)heightSensorSupport.c $(SOURCE_DIR)PID_height.c 
SOURCES_PID = $(PID_DIR)pidPlugin.c $(PID_DIR)pid.c $(PID_DIR)pidSupport.c $(PID_DIR)pid_publisher.c 

COMMONSOURCES_IMU = $(notdir $(SOURCES_IMU))
COMMONSOURCES_HEIGHT = $(notdir $(SOURCES_HEIGHT))
COMMONSOURCES_PID = $(notdir $(SOURCES_PID))

EXEC_IMU       = imu_subscriber imu_publisher
EXEC_HEIGHT    = heightSensor_subscriber heightSensor_publisher
EXEC_PID       = pid_subscriber pid_publisher

DIRECTORIES_IMU   = objs.dir objs/$(TARGET_ARCH).dir objs/$(TARGET_ARCH)/$(TARGET_IMU).dir
DIRECTORIES_HEIGHT = objs.dir objs/$(TARGET_ARCH).dir objs/$(TARGET_ARCH)/$(TARGET_HEIGHT).dir
DIRECTORIES_PID = objs.dir objs/$(TARGET_ARCH).dir objs/$(TARGET_ARCH)/$(TARGET_PID).dir

COMMONOBJS_IMU    = $(COMMONSOURCES_IMU:%.c=objs/$(TARGET_ARCH)/$(TARGET_IMU)/%.o)
COMMONOBJS_HEIGHT = $(COMMONSOURCES_HEIGHT:%.c=objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/%.o)
COMMONOBJS_PID    = $(COMMONSOURCES_PID:%.c=objs/$(TARGET_ARCH)/$(TARGET_PID)/%.o)

# We actually stick the objects in a sub directory to keep your directory clean.
$(TARGET_ARCH) : $(DIRECTORIES_IMU) $(COMMONOBJS_IMU) $(DIRECTORIES_HEIGHT) $(COMMONOBJS_HEIGHT) $(DIRECTORIES_PID) $(COMMONOBJS_PID) \
	$(EXEC_IMU:%=objs/$(TARGET_ARCH)/$(TARGET_IMU)/%.o) \
	$(EXEC_IMU:%=objs/$(TARGET_ARCH)/$(TARGET_IMU)/%) \
	$(EXEC_HEIGHT:%=objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/%.o) \
	$(EXEC_HEIGHT:%=objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/%) 


#### REGLAS IMU
objs/$(TARGET_ARCH)/$(TARGET_IMU)/% : objs/$(TARGET_ARCH)/$(TARGET_IMU)/%.o objs/$(TARGET_ARCH)/$(TARGET_IMU)/PID_pitch.o objs/$(TARGET_ARCH)/$(TARGET_IMU)/PID_roll.o objs/$(TARGET_ARCH)/$(TARGET_PID)/pid_publisher.o
	$(LINKER) $(LINKER_FLAGS)   -o $@ $@.o $(COMMONOBJS_IMU) $(COMMONOBJS_PID) $(LIBS)

objs/$(TARGET_ARCH)/$(TARGET_IMU)/%.o : $(IMU_DIR)%.c $(IMU_DIR)imu.h 
	$(COMPILER) $(COMPILER_FLAGS)  -o $@ $(DEFINES) $(INCLUDES) -c $<

objs/$(TARGET_ARCH)/$(TARGET_IMU)/PID%.o : $(SOURCE_DIR)PID%.c $(SOURCE_DIR)PID.h  
	$(COMPILER) -o $@ $(DEFINES) -c $<

#### REGLAS HEIGHT
objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/% : objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/%.o objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/PID_height.o
	$(LINKER) $(LINKER_FLAGS)   -o $@ $@.o $(COMMONOBJS_HEIGHT) $(COMMONOBJS_PID) $(LIBS)

objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/%.o : $(HEIGHT_DIR)%.c $(HEIGHT_DIR)heightSensor.h 
	$(COMPILER) $(COMPILER_FLAGS)  -o $@ $(DEFINES) $(INCLUDES) -c $<

objs/$(TARGET_ARCH)/$(TARGET_HEIGHT)/PID%.o : $(SOURCE_DIR)PID%.c   $(SOURCE_DIR)PID.h 
	$(COMPILER) -o $@ $(DEFINES) -c $<

#### REGLAS PID
objs/$(TARGET_ARCH)/$(TARGET_PID)/%.o : $(PID_DIR)%.c   $(PID_DIR)pid.h
	$(COMPILER) $(COMPILER_FLAGS)  -o $@ $(DEFINES) $(INCLUDES) -c $<



#
# Uncomment these lines if you want the support files regenerated when idl
# file is modified
#
#
#  $(SOURCE_DIR)imuPlugin.c $(SOURCE_DIR)imu.c $(SOURCE_DIR)imuSupport.c \
#  $(SOURCE_DIR)imu.h $(SOURCE_DIR)imuPlugin.h $(SOURCE_DIR)imuSupport.h : \
#		$(SOURCE_DIR)imu.idl
#	$(NDDSHOME)/bin/rtiddsgen $(SOURCE_DIR)imu.idl -replace -language C
#
# Here is how we create those subdirectories automatically.
%.dir : 
	@echo "Checking directory $*"
	@if [ ! -d $* ]; then \
		echo "Making directory $*"; \
		mkdir -p $* ; \
	fi;

